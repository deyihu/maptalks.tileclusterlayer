{"version":3,"file":"maptalks.tileclusterlayer.js","sources":["../node_modules/@mapbox/sphericalmercator/sphericalmercator.js","../node_modules/kdbush/src/sort.js","../node_modules/kdbush/src/range.js","../node_modules/kdbush/src/within.js","../node_modules/kdbush/src/index.js","../node_modules/@mapbox/tilebelt/index.js","../node_modules/@mapbox/tile-cover/index.js","../index.js"],"sourcesContent":["var SphericalMercator = (function(){\n\n// Closures including constants and other precalculated values.\nvar cache = {},\n    EPSLN = 1.0e-10,\n    D2R = Math.PI / 180,\n    R2D = 180 / Math.PI,\n    // 900913 properties.\n    A = 6378137.0,\n    MAXEXTENT = 20037508.342789244;\n\nfunction isFloat(n){\n    return Number(n) === n && n % 1 !== 0;\n}\n\n// SphericalMercator constructor: precaches calculations\n// for fast tile lookups.\nfunction SphericalMercator(options) {\n    options = options || {};\n    this.size = options.size || 256;\n    this.expansion = (options.antimeridian === true) ? 2 : 1;\n    if (!cache[this.size]) {\n        var size = this.size;\n        var c = cache[this.size] = {};\n        c.Bc = [];\n        c.Cc = [];\n        c.zc = [];\n        c.Ac = [];\n        for (var d = 0; d < 30; d++) {\n            c.Bc.push(size / 360);\n            c.Cc.push(size / (2 * Math.PI));\n            c.zc.push(size / 2);\n            c.Ac.push(size);\n            size *= 2;\n        }\n    }\n    this.Bc = cache[this.size].Bc;\n    this.Cc = cache[this.size].Cc;\n    this.zc = cache[this.size].zc;\n    this.Ac = cache[this.size].Ac;\n};\n\n// Convert lon lat to screen pixel value\n//\n// - `ll` {Array} `[lon, lat]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.px = function(ll, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var d = size / 2;\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var ac = size;\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = d + ll[0] * bc;\n    var y = d + 0.5 * Math.log((1 + f) / (1 - f)) * -cc;\n    (x > ac * this.expansion) && (x = ac * this.expansion);\n    (y > ac) && (y = ac);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  } else {\n    var d = this.zc[zoom];\n    var f = Math.min(Math.max(Math.sin(D2R * ll[1]), -0.9999), 0.9999);\n    var x = Math.round(d + ll[0] * this.Bc[zoom]);\n    var y = Math.round(d + 0.5 * Math.log((1 + f) / (1 - f)) * (-this.Cc[zoom]));\n    (x > this.Ac[zoom] * this.expansion) && (x = this.Ac[zoom] * this.expansion);\n    (y > this.Ac[zoom]) && (y = this.Ac[zoom]);\n    //(x < 0) && (x = 0);\n    //(y < 0) && (y = 0);\n    return [x, y];\n  }\n};\n\n// Convert screen pixel value to lon lat\n//\n// - `px` {Array} `[x, y]` array of geographic coordinates.\n// - `zoom` {Number} zoom level.\nSphericalMercator.prototype.ll = function(px, zoom) {\n  if (isFloat(zoom)) {\n    var size = this.size * Math.pow(2, zoom);\n    var bc = (size / 360);\n    var cc = (size / (2 * Math.PI));\n    var zc = size / 2;\n    var g = (px[1] - zc) / -cc;\n    var lon = (px[0] - zc) / bc;\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  } else {\n    var g = (px[1] - this.zc[zoom]) / (-this.Cc[zoom]);\n    var lon = (px[0] - this.zc[zoom]) / this.Bc[zoom];\n    var lat = R2D * (2 * Math.atan(Math.exp(g)) - 0.5 * Math.PI);\n    return [lon, lat];\n  }\n};\n\n// Convert tile xyz value to bbox of the form `[w, s, e, n]`\n//\n// - `x` {Number} x (longitude) number.\n// - `y` {Number} y (latitude) number.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection for resulting bbox (WGS84|900913).\n// - `return` {Array} bbox array of values in form `[w, s, e, n]`.\nSphericalMercator.prototype.bbox = function(x, y, zoom, tms_style, srs) {\n    // Convert xyz into bbox with srs WGS84\n    if (tms_style) {\n        y = (Math.pow(2, zoom) - 1) - y;\n    }\n    // Use +y to make sure it's a number to avoid inadvertent concatenation.\n    var ll = [x * this.size, (+y + 1) * this.size]; // lower left\n    // Use +x to make sure it's a number to avoid inadvertent concatenation.\n    var ur = [(+x + 1) * this.size, y * this.size]; // upper right\n    var bbox = this.ll(ll, zoom).concat(this.ll(ur, zoom));\n\n    // If web mercator requested reproject to 900913.\n    if (srs === '900913') {\n        return this.convert(bbox, '900913');\n    } else {\n        return bbox;\n    }\n};\n\n// Convert bbox to xyx bounds\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `zoom` {Number} zoom.\n// - `tms_style` {Boolean} whether to compute using tms-style.\n// - `srs` {String} projection of input bbox (WGS84|900913).\n// - `@return` {Object} XYZ bounds containing minX, maxX, minY, maxY properties.\nSphericalMercator.prototype.xyz = function(bbox, zoom, tms_style, srs) {\n    // If web mercator provided reproject to WGS84.\n    if (srs === '900913') {\n        bbox = this.convert(bbox, 'WGS84');\n    }\n\n    var ll = [bbox[0], bbox[1]]; // lower left\n    var ur = [bbox[2], bbox[3]]; // upper right\n    var px_ll = this.px(ll, zoom);\n    var px_ur = this.px(ur, zoom);\n    // Y = 0 for XYZ is the top hence minY uses px_ur[1].\n    var x = [ Math.floor(px_ll[0] / this.size), Math.floor((px_ur[0] - 1) / this.size) ];\n    var y = [ Math.floor(px_ur[1] / this.size), Math.floor((px_ll[1] - 1) / this.size) ];\n    var bounds = {\n        minX: Math.min.apply(Math, x) < 0 ? 0 : Math.min.apply(Math, x),\n        minY: Math.min.apply(Math, y) < 0 ? 0 : Math.min.apply(Math, y),\n        maxX: Math.max.apply(Math, x),\n        maxY: Math.max.apply(Math, y)\n    };\n    if (tms_style) {\n        var tms = {\n            minY: (Math.pow(2, zoom) - 1) - bounds.maxY,\n            maxY: (Math.pow(2, zoom) - 1) - bounds.minY\n        };\n        bounds.minY = tms.minY;\n        bounds.maxY = tms.maxY;\n    }\n    return bounds;\n};\n\n// Convert projection of given bbox.\n//\n// - `bbox` {Number} bbox in the form `[w, s, e, n]`.\n// - `to` {String} projection of output bbox (WGS84|900913). Input bbox\n//   assumed to be the \"other\" projection.\n// - `@return` {Object} bbox with reprojected coordinates.\nSphericalMercator.prototype.convert = function(bbox, to) {\n    if (to === '900913') {\n        return this.forward(bbox.slice(0, 2)).concat(this.forward(bbox.slice(2,4)));\n    } else {\n        return this.inverse(bbox.slice(0, 2)).concat(this.inverse(bbox.slice(2,4)));\n    }\n};\n\n// Convert lon/lat values to 900913 x/y.\nSphericalMercator.prototype.forward = function(ll) {\n    var xy = [\n        A * ll[0] * D2R,\n        A * Math.log(Math.tan((Math.PI*0.25) + (0.5 * ll[1] * D2R)))\n    ];\n    // if xy value is beyond maxextent (e.g. poles), return maxextent.\n    (xy[0] > MAXEXTENT) && (xy[0] = MAXEXTENT);\n    (xy[0] < -MAXEXTENT) && (xy[0] = -MAXEXTENT);\n    (xy[1] > MAXEXTENT) && (xy[1] = MAXEXTENT);\n    (xy[1] < -MAXEXTENT) && (xy[1] = -MAXEXTENT);\n    return xy;\n};\n\n// Convert 900913 x/y values to lon/lat.\nSphericalMercator.prototype.inverse = function(xy) {\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI*0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n};\n\nreturn SphericalMercator;\n\n})();\n\nif (typeof module !== 'undefined' && typeof exports !== 'undefined') {\n    module.exports = exports = SphericalMercator;\n}\n","\nexport default function sortKD(ids, coords, nodeSize, left, right, depth) {\n    if (right - left <= nodeSize) return;\n\n    const m = (left + right) >> 1;\n\n    select(ids, coords, m, left, right, depth % 2);\n\n    sortKD(ids, coords, nodeSize, left, m - 1, depth + 1);\n    sortKD(ids, coords, nodeSize, m + 1, right, depth + 1);\n}\n\nfunction select(ids, coords, k, left, right, inc) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, inc);\n        }\n\n        const t = coords[2 * k + inc];\n        let i = left;\n        let j = right;\n\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + inc] > t) swapItem(ids, coords, left, right);\n\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + inc] < t) i++;\n            while (coords[2 * j + inc] > t) j--;\n        }\n\n        if (coords[2 * left + inc] === t) swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n","\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    let x, y;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n","\nexport default function within(ids, coords, qx, qy, r, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    const r2 = r * r;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n\n        if (sqDist(x, y, qx, qy) <= r2) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n","\nimport sort from './sort';\nimport range from './range';\nimport within from './within';\n\nconst defaultGetX = p => p[0];\nconst defaultGetY = p => p[1];\n\nexport default class KDBush {\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\n        this.nodeSize = nodeSize;\n        this.points = points;\n\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n\n        const ids = this.ids = new IndexArrayType(points.length);\n        const coords = this.coords = new ArrayType(points.length * 2);\n\n        for (let i = 0; i < points.length; i++) {\n            ids[i] = i;\n            coords[2 * i] = getX(points[i]);\n            coords[2 * i + 1] = getY(points[i]);\n        }\n\n        sort(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    }\n\n    range(minX, minY, maxX, maxY) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize);\n    }\n\n    within(x, y, r) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize);\n    }\n}\n","'use strict';\n\nvar d2r = Math.PI / 180,\n    r2d = 180 / Math.PI;\n\n/**\n * Get the bbox of a tile\n *\n * @name tileToBBOX\n * @param {Array<number>} tile\n * @returns {Array<number>} bbox\n * @example\n * var bbox = tileToBBOX([5, 10, 10])\n * //=bbox\n */\nfunction tileToBBOX(tile) {\n    var e = tile2lon(tile[0] + 1, tile[2]);\n    var w = tile2lon(tile[0], tile[2]);\n    var s = tile2lat(tile[1] + 1, tile[2]);\n    var n = tile2lat(tile[1], tile[2]);\n    return [w, s, e, n];\n}\n\n/**\n * Get a geojson representation of a tile\n *\n * @name tileToGeoJSON\n * @param {Array<number>} tile\n * @returns {Feature<Polygon>}\n * @example\n * var poly = tileToGeoJSON([5, 10, 10])\n * //=poly\n */\nfunction tileToGeoJSON(tile) {\n    var bbox = tileToBBOX(tile);\n    var poly = {\n        type: 'Polygon',\n        coordinates: [[\n            [bbox[0], bbox[3]],\n            [bbox[0], bbox[1]],\n            [bbox[2], bbox[1]],\n            [bbox[2], bbox[3]],\n            [bbox[0], bbox[3]]\n        ]]\n    };\n    return poly;\n}\n\nfunction tile2lon(x, z) {\n    return x / Math.pow(2, z) * 360 - 180;\n}\n\nfunction tile2lat(y, z) {\n    var n = Math.PI - 2 * Math.PI * y / Math.pow(2, z);\n    return r2d * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\n/**\n * Get the tile for a point at a specified zoom level\n *\n * @name pointToTile\n * @param {number} lon\n * @param {number} lat\n * @param {number} z\n * @returns {Array<number>} tile\n * @example\n * var tile = pointToTile(1, 1, 20)\n * //=tile\n */\nfunction pointToTile(lon, lat, z) {\n    var tile = pointToTileFraction(lon, lat, z);\n    tile[0] = Math.floor(tile[0]);\n    tile[1] = Math.floor(tile[1]);\n    return tile;\n}\n\n/**\n * Get the 4 tiles one zoom level higher\n *\n * @name getChildren\n * @param {Array<number>} tile\n * @returns {Array<Array<number>>} tiles\n * @example\n * var tiles = getChildren([5, 10, 10])\n * //=tiles\n */\nfunction getChildren(tile) {\n    return [\n        [tile[0] * 2, tile[1] * 2, tile[2] + 1],\n        [tile[0] * 2 + 1, tile[1] * 2, tile[2 ] + 1],\n        [tile[0] * 2 + 1, tile[1] * 2 + 1, tile[2] + 1],\n        [tile[0] * 2, tile[1] * 2 + 1, tile[2] + 1]\n    ];\n}\n\n/**\n * Get the tile one zoom level lower\n *\n * @name getParent\n * @param {Array<number>} tile\n * @returns {Array<number>} tile\n * @example\n * var tile = getParent([5, 10, 10])\n * //=tile\n */\nfunction getParent(tile) {\n    return [tile[0] >> 1, tile[1] >> 1, tile[2] - 1];\n}\n\nfunction getSiblings(tile) {\n    return getChildren(getParent(tile));\n}\n\n/**\n * Get the 3 sibling tiles for a tile\n *\n * @name getSiblings\n * @param {Array<number>} tile\n * @returns {Array<Array<number>>} tiles\n * @example\n * var tiles = getSiblings([5, 10, 10])\n * //=tiles\n */\nfunction hasSiblings(tile, tiles) {\n    var siblings = getSiblings(tile);\n    for (var i = 0; i < siblings.length; i++) {\n        if (!hasTile(tiles, siblings[i])) return false;\n    }\n    return true;\n}\n\n/**\n * Check to see if an array of tiles contains a particular tile\n *\n * @name hasTile\n * @param {Array<Array<number>>} tiles\n * @param {Array<number>} tile\n * @returns {boolean}\n * @example\n * var tiles = [\n *     [0, 0, 5],\n *     [0, 1, 5],\n *     [1, 1, 5],\n *     [1, 0, 5]\n * ]\n * hasTile(tiles, [0, 0, 5])\n * //=boolean\n */\nfunction hasTile(tiles, tile) {\n    for (var i = 0; i < tiles.length; i++) {\n        if (tilesEqual(tiles[i], tile)) return true;\n    }\n    return false;\n}\n\n/**\n * Check to see if two tiles are the same\n *\n * @name tilesEqual\n * @param {Array<number>} tile1\n * @param {Array<number>} tile2\n * @returns {boolean}\n * @example\n * tilesEqual([0, 1, 5], [0, 0, 5])\n * //=boolean\n */\nfunction tilesEqual(tile1, tile2) {\n    return (\n        tile1[0] === tile2[0] &&\n        tile1[1] === tile2[1] &&\n        tile1[2] === tile2[2]\n    );\n}\n\n/**\n * Get the quadkey for a tile\n *\n * @name tileToQuadkey\n * @param {Array<number>} tile\n * @returns {string} quadkey\n * @example\n * var quadkey = tileToQuadkey([0, 1, 5])\n * //=quadkey\n */\nfunction tileToQuadkey(tile) {\n    var index = '';\n    for (var z = tile[2]; z > 0; z--) {\n        var b = 0;\n        var mask = 1 << (z - 1);\n        if ((tile[0] & mask) !== 0) b++;\n        if ((tile[1] & mask) !== 0) b += 2;\n        index += b.toString();\n    }\n    return index;\n}\n\n/**\n * Get the tile for a quadkey\n *\n * @name quadkeyToTile\n * @param {string} quadkey\n * @returns {Array<number>} tile\n * @example\n * var tile = quadkeyToTile('00001033')\n * //=tile\n */\nfunction quadkeyToTile(quadkey) {\n    var x = 0;\n    var y = 0;\n    var z = quadkey.length;\n\n    for (var i = z; i > 0; i--) {\n        var mask = 1 << (i - 1);\n        var q = +quadkey[z - i];\n        if (q === 1) x |= mask;\n        if (q === 2) y |= mask;\n        if (q === 3) {\n            x |= mask;\n            y |= mask;\n        }\n    }\n    return [x, y, z];\n}\n\n/**\n * Get the smallest tile to cover a bbox\n *\n * @name bboxToTile\n * @param {Array<number>} bbox\n * @returns {Array<number>} tile\n * @example\n * var tile = bboxToTile([ -178, 84, -177, 85 ])\n * //=tile\n */\nfunction bboxToTile(bboxCoords) {\n    var min = pointToTile(bboxCoords[0], bboxCoords[1], 32);\n    var max = pointToTile(bboxCoords[2], bboxCoords[3], 32);\n    var bbox = [min[0], min[1], max[0], max[1]];\n\n    var z = getBboxZoom(bbox);\n    if (z === 0) return [0, 0, 0];\n    var x = bbox[0] >>> (32 - z);\n    var y = bbox[1] >>> (32 - z);\n    return [x, y, z];\n}\n\nfunction getBboxZoom(bbox) {\n    var MAX_ZOOM = 28;\n    for (var z = 0; z < MAX_ZOOM; z++) {\n        var mask = 1 << (32 - (z + 1));\n        if (((bbox[0] & mask) !== (bbox[2] & mask)) ||\n            ((bbox[1] & mask) !== (bbox[3] & mask))) {\n            return z;\n        }\n    }\n\n    return MAX_ZOOM;\n}\n\n/**\n * Get the precise fractional tile location for a point at a zoom level\n *\n * @name pointToTileFraction\n * @param {number} lon\n * @param {number} lat\n * @param {number} z\n * @returns {Array<number>} tile fraction\n * var tile = pointToTileFraction(30.5, 50.5, 15)\n * //=tile\n */\nfunction pointToTileFraction(lon, lat, z) {\n    var sin = Math.sin(lat * d2r),\n        z2 = Math.pow(2, z),\n        x = z2 * (lon / 360 + 0.5),\n        y = z2 * (0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI);\n\n    // Wrap Tile X\n    x = x % z2;\n    if (x < 0) x = x + z2;\n    return [x, y, z];\n}\n\nmodule.exports = {\n    tileToGeoJSON: tileToGeoJSON,\n    tileToBBOX: tileToBBOX,\n    getChildren: getChildren,\n    getParent: getParent,\n    getSiblings: getSiblings,\n    hasTile: hasTile,\n    hasSiblings: hasSiblings,\n    tilesEqual: tilesEqual,\n    tileToQuadkey: tileToQuadkey,\n    quadkeyToTile: quadkeyToTile,\n    pointToTile: pointToTile,\n    bboxToTile: bboxToTile,\n    pointToTileFraction: pointToTileFraction\n};\n","'use strict';\n\nvar tilebelt = require('@mapbox/tilebelt');\n\n/**\n * Given a geometry, create cells and return them in a format easily readable\n * by any software that reads GeoJSON.\n *\n * @alias geojson\n * @param {Object} geom GeoJSON geometry\n * @param {Object} limits an object with min_zoom and max_zoom properties\n * specifying the minimum and maximum level to be tiled.\n * @returns {Object} FeatureCollection of cells formatted as GeoJSON Features\n */\nexports.geojson = function (geom, limits) {\n    return {\n        type: 'FeatureCollection',\n        features: getTiles(geom, limits).map(tileToFeature)\n    };\n};\n\nfunction tileToFeature(t) {\n    return {\n        type: 'Feature',\n        geometry: tilebelt.tileToGeoJSON(t),\n        properties: {}\n    };\n}\n\n/**\n * Given a geometry, create cells and return them in their raw form,\n * as an array of cell identifiers.\n *\n * @alias tiles\n * @param {Object} geom GeoJSON geometry\n * @param {Object} limits an object with min_zoom and max_zoom properties\n * specifying the minimum and maximum level to be tiled.\n * @returns {Array<Array<number>>} An array of tiles given as [x, y, z] arrays\n */\nexports.tiles = getTiles;\n\n/**\n * Given a geometry, create cells and return them as\n * [quadkey](http://msdn.microsoft.com/en-us/library/bb259689.aspx) indexes.\n *\n * @alias indexes\n * @param {Object} geom GeoJSON geometry\n * @param {Object} limits an object with min_zoom and max_zoom properties\n * specifying the minimum and maximum level to be tiled.\n * @returns {Array<String>} An array of tiles given as quadkeys.\n */\nexports.indexes = function (geom, limits) {\n    return getTiles(geom, limits).map(tilebelt.tileToQuadkey);\n};\n\nfunction getTiles(geom, limits) {\n    var i, tile,\n        coords = geom.coordinates,\n        maxZoom = limits.max_zoom,\n        tileHash = {},\n        tiles = [];\n\n    if (geom.type === 'Point') {\n        return [tilebelt.pointToTile(coords[0], coords[1], maxZoom)];\n\n    } else if (geom.type === 'MultiPoint') {\n        for (i = 0; i < coords.length; i++) {\n            tile = tilebelt.pointToTile(coords[i][0], coords[i][1], maxZoom);\n            tileHash[toID(tile[0], tile[1], tile[2])] = true;\n        }\n    } else if (geom.type === 'LineString') {\n        lineCover(tileHash, coords, maxZoom);\n\n    } else if (geom.type === 'MultiLineString') {\n        for (i = 0; i < coords.length; i++) {\n            lineCover(tileHash, coords[i], maxZoom);\n        }\n    } else if (geom.type === 'Polygon') {\n        polygonCover(tileHash, tiles, coords, maxZoom);\n\n    } else if (geom.type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            polygonCover(tileHash, tiles, coords[i], maxZoom);\n        }\n    } else {\n        throw new Error('Geometry type not implemented');\n    }\n\n    if (limits.min_zoom !== maxZoom) {\n        // sync tile hash and tile array so that both contain the same tiles\n        var len = tiles.length;\n        appendHashTiles(tileHash, tiles);\n        for (i = 0; i < len; i++) {\n            var t = tiles[i];\n            tileHash[toID(t[0], t[1], t[2])] = true;\n        }\n        return mergeTiles(tileHash, tiles, limits);\n    }\n\n    appendHashTiles(tileHash, tiles);\n    return tiles;\n}\n\nfunction mergeTiles(tileHash, tiles, limits) {\n    var mergedTiles = [];\n\n    for (var z = limits.max_zoom; z > limits.min_zoom; z--) {\n\n        var parentTileHash = {};\n        var parentTiles = [];\n\n        for (var i = 0; i < tiles.length; i++) {\n            var t = tiles[i];\n\n            if (t[0] % 2 === 0 && t[1] % 2 === 0) {\n                var id2 = toID(t[0] + 1, t[1], z),\n                    id3 = toID(t[0], t[1] + 1, z),\n                    id4 = toID(t[0] + 1, t[1] + 1, z);\n\n                if (tileHash[id2] && tileHash[id3] && tileHash[id4]) {\n                    tileHash[toID(t[0], t[1], t[2])] = false;\n                    tileHash[id2] = false;\n                    tileHash[id3] = false;\n                    tileHash[id4] = false;\n\n                    var parentTile = [t[0] / 2, t[1] / 2, z - 1];\n\n                    if (z - 1 === limits.min_zoom) mergedTiles.push(parentTile);\n                    else {\n                        parentTileHash[toID(t[0] / 2, t[1] / 2, z - 1)] = true;\n                        parentTiles.push(parentTile);\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < tiles.length; i++) {\n            t = tiles[i];\n            if (tileHash[toID(t[0], t[1], t[2])]) mergedTiles.push(t);\n        }\n\n        tileHash = parentTileHash;\n        tiles = parentTiles;\n    }\n\n    return mergedTiles;\n}\n\nfunction polygonCover(tileHash, tileArray, geom, zoom) {\n    var intersections = [];\n\n    for (var i = 0; i < geom.length; i++) {\n        var ring = [];\n        lineCover(tileHash, geom[i], zoom, ring);\n\n        for (var j = 0, len = ring.length, k = len - 1; j < len; k = j++) {\n            var m = (j + 1) % len;\n            var y = ring[j][1];\n\n            // add interesction if it's not local extremum or duplicate\n            if ((y > ring[k][1] || y > ring[m][1]) && // not local minimum\n                (y < ring[k][1] || y < ring[m][1]) && // not local maximum\n                y !== ring[m][1]) intersections.push(ring[j]);\n        }\n    }\n\n    intersections.sort(compareTiles); // sort by y, then x\n\n    for (i = 0; i < intersections.length; i += 2) {\n        // fill tiles between pairs of intersections\n        y = intersections[i][1];\n        for (var x = intersections[i][0] + 1; x < intersections[i + 1][0]; x++) {\n            var id = toID(x, y, zoom);\n            if (!tileHash[id]) {\n                tileArray.push([x, y, zoom]);\n            }\n        }\n    }\n}\n\nfunction compareTiles(a, b) {\n    return (a[1] - b[1]) || (a[0] - b[0]);\n}\n\nfunction lineCover(tileHash, coords, maxZoom, ring) {\n    var prevX, prevY;\n\n    for (var i = 0; i < coords.length - 1; i++) {\n        var start = tilebelt.pointToTileFraction(coords[i][0], coords[i][1], maxZoom),\n            stop = tilebelt.pointToTileFraction(coords[i + 1][0], coords[i + 1][1], maxZoom),\n            x0 = start[0],\n            y0 = start[1],\n            x1 = stop[0],\n            y1 = stop[1],\n            dx = x1 - x0,\n            dy = y1 - y0;\n\n        if (dy === 0 && dx === 0) continue;\n\n        var sx = dx > 0 ? 1 : -1,\n            sy = dy > 0 ? 1 : -1,\n            x = Math.floor(x0),\n            y = Math.floor(y0),\n            tMaxX = dx === 0 ? Infinity : Math.abs(((dx > 0 ? 1 : 0) + x - x0) / dx),\n            tMaxY = dy === 0 ? Infinity : Math.abs(((dy > 0 ? 1 : 0) + y - y0) / dy),\n            tdx = Math.abs(sx / dx),\n            tdy = Math.abs(sy / dy);\n\n        if (x !== prevX || y !== prevY) {\n            tileHash[toID(x, y, maxZoom)] = true;\n            if (ring && y !== prevY) ring.push([x, y]);\n            prevX = x;\n            prevY = y;\n        }\n\n        while (tMaxX < 1 || tMaxY < 1) {\n            if (tMaxX < tMaxY) {\n                tMaxX += tdx;\n                x += sx;\n            } else {\n                tMaxY += tdy;\n                y += sy;\n            }\n            tileHash[toID(x, y, maxZoom)] = true;\n            if (ring && y !== prevY) ring.push([x, y]);\n            prevX = x;\n            prevY = y;\n        }\n    }\n\n    if (ring && y === ring[0][1]) ring.pop();\n}\n\nfunction appendHashTiles(hash, tiles) {\n    var keys = Object.keys(hash);\n    for (var i = 0; i < keys.length; i++) {\n        tiles.push(fromID(+keys[i]));\n    }\n}\n\nfunction toID(x, y, z) {\n    var dim = 2 * (1 << z);\n    return ((dim * y + x) * 32) + z;\n}\n\nfunction fromID(id) {\n    var z = id % 32,\n        dim = 2 * (1 << z),\n        xy = ((id - z) / 32),\n        x = xy % dim,\n        y = ((xy - x) / dim) % dim;\n    return [x, y, z];\n}\n","import * as maptalks from 'maptalks';\r\nimport SphericalMercator from '@mapbox/sphericalmercator';\r\nimport KDBush from 'kdbush';\r\nimport TileCover from '@mapbox/tile-cover';\r\n\r\nconst options = {\r\n    maxClusterZoom: 18,\r\n    clusterMarkerSymbol: null,\r\n    markerEvents: {},\r\n    clusterDispersion: false,\r\n    dispersionCount: 100\r\n};\r\n\r\nfunction bboxToPolygon(bbox) {\r\n    const { xmin, ymin, xmax, ymax } = bbox;\r\n    return {\r\n        type: 'Polygon',\r\n        coordinates: [\r\n            [\r\n                [xmin, ymin],\r\n                [xmin, ymax],\r\n                [xmax, ymax],\r\n                [xmax, ymin],\r\n                [xmin, ymin]\r\n            ]\r\n        ]\r\n    };\r\n}\r\n\r\nfunction getMarkerFill(count) {\r\n    let color = 'rgb(135, 196, 240)';\r\n    if (!count) { return color; }\r\n    if (count > 1000) { color = '#1bbc9b'; }\r\n    if (count > 5000) { color = 'rgb(216, 115, 149)'; }\r\n    return color;\r\n}\r\n\r\nfunction getDefaultClusterMarkerSymbol(count) {\r\n    const markerFill = getMarkerFill(count);\r\n    return {\r\n        markerType: 'ellipse',\r\n        markerWidth: 65,\r\n        markerHeight: 65,\r\n        markerFill,\r\n        markerLineWidth: 0,\r\n        markerFillOpacity: 1,\r\n        markerOpacity: 1,\r\n        textSize: 15,\r\n        textName: count,\r\n        textHaloFill: '#000',\r\n        textHaloRadius: 1.2,\r\n        textFill: '#fff'\r\n    };\r\n}\r\n\r\nexport class TileClusterLayer extends maptalks.VectorLayer {\r\n\r\n    constructor(id, options) {\r\n        super(id, options);\r\n        this._tileCache = {};\r\n        this._currentTileCache = {};\r\n        this.merc = new SphericalMercator({\r\n            size: 256\r\n            // antimeridian: true\r\n        });\r\n        this.globalPoints = [];\r\n        this.globalFeatures = [];\r\n        this.kdbush = null;\r\n    }\r\n\r\n    _isGeoJSON(geojson) {\r\n        return (geojson && geojson.features && Array.isArray(geojson.features));\r\n    }\r\n\r\n    _isEmpty() {\r\n        return this.globalPoints.length === 0;\r\n    }\r\n\r\n    setData(geojson) {\r\n        if (!this._isGeoJSON(geojson)) {\r\n            console.error('data is not geojson');\r\n            return this;\r\n        }\r\n        const { features, points } = this._filterGeoJSON(geojson);\r\n        this.globalFeatures = features;\r\n        this.globalPoints = points;\r\n        this.kdbush = new KDBush(points);\r\n        this.clear();\r\n        this._tileCache = {};\r\n        this._currentTileCache = {};\r\n        this._viewChange();\r\n        return this;\r\n    }\r\n\r\n    onAdd() {\r\n        super.onAdd();\r\n        const map = this.map || this.getMap();\r\n        if (!map) return this;\r\n        map.on('viewchange', this._viewChange, this);\r\n        this._viewChange();\r\n        return this;\r\n    }\r\n\r\n    onRemove() {\r\n        super.onRemove();\r\n        const map = this.map || this.getMap();\r\n        if (!map) return this;\r\n        map.off('viewchange', this._viewChange, this);\r\n        return this;\r\n    }\r\n\r\n    _viewChange() {\r\n        if (this._isEmpty()) {\r\n            return this;\r\n        }\r\n        const map = this.getMap();\r\n        if (!map) {\r\n            return this;\r\n        }\r\n        const dispersionMarkers = this.getGeometries().filter(p => {\r\n            return p._isDispersion;\r\n        });\r\n        if (dispersionMarkers) {\r\n            this.removeGeometry(dispersionMarkers);\r\n        }\r\n        const extent = map.getExtent();\r\n        if (extent.xmin > extent.xmax) {\r\n            extent.xmax = 178;\r\n            // extent.xmin = -180;\r\n            // extent.xmax = 180;\r\n            // extent.ymin = -85;\r\n            // extent.ymax = 85;\r\n        }\r\n        if (extent.ymin > extent.ymax) {\r\n            extent.ymax = 85;\r\n        }\r\n        const polygon = bboxToPolygon(extent);\r\n        const zoom = Math.round(map.getZoom());\r\n        const tiles = TileCover.tiles(polygon, {\r\n            min_zoom: zoom,\r\n            max_zoom: zoom\r\n        });\r\n        this._cluster(tiles);\r\n    }\r\n\r\n    _cluster(tiles) {\r\n        if (this._isEmpty()) {\r\n            return this;\r\n        }\r\n        const currentTileCache = this._currentTileCache, tileCache = this._tileCache, merc = this.merc, kdbush = this.kdbush;\r\n        const cache = {};\r\n        tiles.forEach(tile => {\r\n            const [x, y, z] = tile;\r\n            const key = [x, y, z].join('_').toString();\r\n            cache[key] = 1;\r\n            if (currentTileCache[key]) {\r\n                return;\r\n            }\r\n            let clusterResult;\r\n            if (!tileCache[key]) {\r\n                const bbox = merc.bbox(x, y, z);\r\n                const ids = kdbush.range(bbox[0], bbox[1], bbox[2], bbox[3]);\r\n                clusterResult = this._tileCluster(key, ids, z);\r\n            } else {\r\n                clusterResult = tileCache[key];\r\n            }\r\n            if (!currentTileCache[key] && clusterResult.markers.length) {\r\n                this.addGeometry(clusterResult.markers);\r\n            }\r\n            currentTileCache[key] = clusterResult;\r\n        });\r\n        for (const key in currentTileCache) {\r\n            if (!cache[key]) {\r\n                if (currentTileCache[key].markers.length) {\r\n                    this.removeGeometry(currentTileCache[key].markers);\r\n                }\r\n                delete currentTileCache[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    _tileCluster(key, ids, zoom) {\r\n        const tileCache = this._tileCache, globalPoints = this.globalPoints, globalFeatures = this.globalFeatures,\r\n            maxZoom = this.options.maxClusterZoom;\r\n        if (!tileCache[key]) {\r\n            tileCache[key] = {\r\n                points: [],\r\n                features: [],\r\n                coordinate: null,\r\n                markers: []\r\n            };\r\n            if (ids.length) {\r\n                const { x, y, points, features } = this._getClusterResult(globalPoints, ids);\r\n                tileCache[key].coordinates = [x, y];\r\n                if (ids.length === 1) {\r\n                    const feature = globalFeatures[ids[0]];\r\n                    tileCache[key].markers = [new maptalks.Marker(tileCache[key].coordinates, {\r\n                        symbol: feature.symbol,\r\n                        properties: feature.properties || {}\r\n                    })];\r\n                } else if (zoom > maxZoom) {\r\n                    tileCache[key].markers = ids.map(id => {\r\n                        const feature = globalFeatures[id];\r\n                        return new maptalks.Marker(globalPoints[id], {\r\n                            symbol: feature.symbol,\r\n                            properties: feature.properties || {}\r\n                        });\r\n                    });\r\n                } else {\r\n                    tileCache[key].markers = [this._getClusterMarker(tileCache[key].coordinates, ids.length, features)];\r\n                }\r\n                this._bindMarkersEvents(tileCache[key].markers);\r\n                tileCache[key].points = points;\r\n                tileCache[key].features = features;\r\n            }\r\n        }\r\n        return tileCache[key];\r\n    }\r\n\r\n    _bindMarkersEvents(markers = []) {\r\n        markers.forEach(marker => {\r\n            const properties = marker.getProperties() || {};\r\n            if (properties.isCluster && properties.features && properties.features.length <= this.options.dispersionCount) {\r\n                marker.on('mouseover mouseout', this._clusterDispersion, this);\r\n            }\r\n            for (const eventName in this.options.markerEvents) {\r\n                marker.on(eventName, this.options.markerEvents[eventName]);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    _clusterDispersion(e) {\r\n        if (!this.options.clusterDispersion) {\r\n            return this;\r\n        }\r\n        const clusterMarker = e.target;\r\n        if (!clusterMarker._children) {\r\n            const properties = clusterMarker.getProperties() || {};\r\n            const features = properties.features || [];\r\n            if (features.length) {\r\n                clusterMarker._children = features.map(f => {\r\n                    const marker = new maptalks.Marker(f.geometry.coordinates, {\r\n                        symbol: f.symbol,\r\n                        properties: f.properties,\r\n                        zIndex: Infinity\r\n                    });\r\n                    marker.setZIndex(Infinity);\r\n                    marker._isDispersion = true;\r\n                    return marker;\r\n                });\r\n            }\r\n        }\r\n        if (e.type === 'mouseover' && clusterMarker._children && clusterMarker._children.length) {\r\n            const children = clusterMarker._children.filter(p => {\r\n                return !p.getLayer();\r\n            });\r\n\r\n            if (children.length) {\r\n                this.addGeometry(children);\r\n            }\r\n        }\r\n        if (e.type === 'mouseout' && clusterMarker._children && clusterMarker._children.length) {\r\n            this.removeGeometry(clusterMarker._children.filter(p => {\r\n                return p.getLayer();\r\n            }));\r\n        }\r\n    }\r\n\r\n    _getClusterMarker(coordinate, count, features) {\r\n        const clusterMarkerSymbol = this.options.clusterMarkerSymbol;\r\n        let symbol;\r\n        if (clusterMarkerSymbol && maptalks.Util.isFunction(clusterMarkerSymbol)) {\r\n            symbol = clusterMarkerSymbol(count);\r\n        }\r\n        if (!symbol) {\r\n            symbol = getDefaultClusterMarkerSymbol(count);\r\n        }\r\n        return new maptalks.Marker(coordinate, {\r\n            symbol,\r\n            properties: {\r\n                isCluster: true,\r\n                features\r\n            }\r\n        });\r\n    }\r\n\r\n    _filterGeoJSON(geojson) {\r\n        const points = [], features = [];\r\n        for (let i = 0, len = geojson.features.length; i < len; i++) {\r\n            if (geojson.features[i].geometry.type !== 'Point') {\r\n                continue;\r\n            }\r\n            points.push(geojson.features[i].geometry.coordinates);\r\n            features.push(geojson.features[i]);\r\n        }\r\n        return {\r\n            points,\r\n            features\r\n        };\r\n    }\r\n\r\n    _getClusterResult(points, ids) {\r\n        const { globalFeatures } = this;\r\n        const filterPoints = [], features = [];\r\n        let sumX = 0, sumY = 0;\r\n        const len = ids.length;\r\n        for (let i = 0; i < len; i++) {\r\n            const id = ids[i];\r\n            const [x, y] = points[id];\r\n            sumX += x;\r\n            sumY += y;\r\n            filterPoints.push(points[id]);\r\n            features.push(globalFeatures[id]);\r\n        }\r\n        return {\r\n            x: sumX / len,\r\n            y: sumY / len,\r\n            points: filterPoints,\r\n            features\r\n        };\r\n    }\r\n};\r\nTileClusterLayer.mergeOptions(options);\r\n"],"names":["sort","tilebelt","maptalks.VectorLayer","SphericalMercator","geojson","tiles","TileCover","maptalks.Marker","maptalks.Util"],"mappings":"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"}