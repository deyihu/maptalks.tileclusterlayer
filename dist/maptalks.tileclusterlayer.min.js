/*!
 * maptalks.tileclusterlayer v0.0.1
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],e):e((t=t||self).maptalks=t.maptalks||{},t.maptalks)}(this,(function(t,e){"use strict";var r=function(t,e){return t(e={exports:{}},e.exports),e.exports}((function(t,e){var r=function(){var t={},e=Math.PI/180,r=180/Math.PI,n=6378137,i=20037508.342789244;function o(t){return Number(t)===t&&t%1!=0}function s(e){if(e=e||{},this.size=e.size||256,this.expansion=!0===e.antimeridian?2:1,!t[this.size]){var r=this.size,n=t[this.size]={};n.Bc=[],n.Cc=[],n.zc=[],n.Ac=[];for(var i=0;i<30;i++)n.Bc.push(r/360),n.Cc.push(r/(2*Math.PI)),n.zc.push(r/2),n.Ac.push(r),r*=2}this.Bc=t[this.size].Bc,this.Cc=t[this.size].Cc,this.zc=t[this.size].zc,this.Ac=t[this.size].Ac}return s.prototype.px=function(t,r){if(o(r)){var n=this.size*Math.pow(2,r),i=n/2,s=n/360,a=n/(2*Math.PI),h=n,u=Math.min(Math.max(Math.sin(e*t[1]),-.9999),.9999),l=i+t[0]*s,c=i+.5*Math.log((1+u)/(1-u))*-a;return l>h*this.expansion&&(l=h*this.expansion),c>h&&(c=h),[l,c]}i=this.zc[r],u=Math.min(Math.max(Math.sin(e*t[1]),-.9999),.9999),l=Math.round(i+t[0]*this.Bc[r]),c=Math.round(i+.5*Math.log((1+u)/(1-u))*-this.Cc[r]);return l>this.Ac[r]*this.expansion&&(l=this.Ac[r]*this.expansion),c>this.Ac[r]&&(c=this.Ac[r]),[l,c]},s.prototype.ll=function(t,e){if(o(e)){var n=this.size*Math.pow(2,e),i=n/360,s=n/(2*Math.PI),a=n/2,h=(t[1]-a)/-s;return[(t[0]-a)/i,r*(2*Math.atan(Math.exp(h))-.5*Math.PI)]}h=(t[1]-this.zc[e])/-this.Cc[e];return[(t[0]-this.zc[e])/this.Bc[e],r*(2*Math.atan(Math.exp(h))-.5*Math.PI)]},s.prototype.bbox=function(t,e,r,n,i){n&&(e=Math.pow(2,r)-1-e);var o=[t*this.size,(+e+1)*this.size],s=[(+t+1)*this.size,e*this.size],a=this.ll(o,r).concat(this.ll(s,r));return"900913"===i?this.convert(a,"900913"):a},s.prototype.xyz=function(t,e,r,n){"900913"===n&&(t=this.convert(t,"WGS84"));var i=[t[0],t[1]],o=[t[2],t[3]],s=this.px(i,e),a=this.px(o,e),h=[Math.floor(s[0]/this.size),Math.floor((a[0]-1)/this.size)],u=[Math.floor(a[1]/this.size),Math.floor((s[1]-1)/this.size)],l={minX:Math.min.apply(Math,h)<0?0:Math.min.apply(Math,h),minY:Math.min.apply(Math,u)<0?0:Math.min.apply(Math,u),maxX:Math.max.apply(Math,h),maxY:Math.max.apply(Math,u)};if(r){var c={minY:Math.pow(2,e)-1-l.maxY,maxY:Math.pow(2,e)-1-l.minY};l.minY=c.minY,l.maxY=c.maxY}return l},s.prototype.convert=function(t,e){return"900913"===e?this.forward(t.slice(0,2)).concat(this.forward(t.slice(2,4))):this.inverse(t.slice(0,2)).concat(this.inverse(t.slice(2,4)))},s.prototype.forward=function(t){var r=[n*t[0]*e,n*Math.log(Math.tan(.25*Math.PI+.5*t[1]*e))];return r[0]>i&&(r[0]=i),r[0]<-i&&(r[0]=-i),r[1]>i&&(r[1]=i),r[1]<-i&&(r[1]=-i),r},s.prototype.inverse=function(t){return[t[0]*r/n,(.5*Math.PI-2*Math.atan(Math.exp(-t[1]/n)))*r]},s}();t.exports=r}));function n(t,e,r,o,s,a){if(s-o<=r)return;const h=o+s>>1;i(t,e,h,o,s,a%2),n(t,e,r,o,h-1,a+1),n(t,e,r,h+1,s,a+1)}function i(t,e,r,n,s,a){for(;s>n;){if(s-n>600){const o=s-n+1,h=r-n+1,u=Math.log(o),l=.5*Math.exp(2*u/3),c=.5*Math.sqrt(u*l*(o-l)/o)*(h-o/2<0?-1:1);i(t,e,r,Math.max(n,Math.floor(r-h*l/o+c)),Math.min(s,Math.floor(r+(o-h)*l/o+c)),a)}const h=e[2*r+a];let u=n,l=s;for(o(t,e,n,r),e[2*s+a]>h&&o(t,e,n,s);u<l;){for(o(t,e,u,l),u++,l--;e[2*u+a]<h;)u++;for(;e[2*l+a]>h;)l--}e[2*n+a]===h?o(t,e,n,l):(l++,o(t,e,l,s)),l<=r&&(n=l+1),r<=l&&(s=l-1)}}function o(t,e,r,n){s(t,r,n),s(e,2*r,2*n),s(e,2*r+1,2*n+1)}function s(t,e,r){const n=t[e];t[e]=t[r],t[r]=n}function a(t,e,r,n){const i=t-r,o=e-n;return i*i+o*o}const h=t=>t[0],u=t=>t[1];class l{constructor(t,e=h,r=u,i=64,o=Float64Array){this.nodeSize=i,this.points=t;const s=t.length<65536?Uint16Array:Uint32Array,a=this.ids=new s(t.length),l=this.coords=new o(2*t.length);for(let n=0;n<t.length;n++)a[n]=n,l[2*n]=e(t[n]),l[2*n+1]=r(t[n]);n(a,l,i,0,a.length-1,0)}range(t,e,r,n){return function(t,e,r,n,i,o,s){const a=[0,t.length-1,0],h=[];let u,l;for(;a.length;){const c=a.pop(),p=a.pop(),f=a.pop();if(p-f<=s){for(let s=f;s<=p;s++)u=e[2*s],l=e[2*s+1],u>=r&&u<=i&&l>=n&&l<=o&&h.push(t[s]);continue}const m=Math.floor((f+p)/2);u=e[2*m],l=e[2*m+1],u>=r&&u<=i&&l>=n&&l<=o&&h.push(t[m]);const M=(c+1)%2;(0===c?r<=u:n<=l)&&(a.push(f),a.push(m-1),a.push(M)),(0===c?i>=u:o>=l)&&(a.push(m+1),a.push(p),a.push(M))}return h}(this.ids,this.coords,t,e,r,n,this.nodeSize)}within(t,e,r){return function(t,e,r,n,i,o){const s=[0,t.length-1,0],h=[],u=i*i;for(;s.length;){const l=s.pop(),c=s.pop(),p=s.pop();if(c-p<=o){for(let i=p;i<=c;i++)a(e[2*i],e[2*i+1],r,n)<=u&&h.push(t[i]);continue}const f=Math.floor((p+c)/2),m=e[2*f],M=e[2*f+1];a(m,M,r,n)<=u&&h.push(t[f]);const g=(l+1)%2;(0===l?r-i<=m:n-i<=M)&&(s.push(p),s.push(f-1),s.push(g)),(0===l?r+i>=m:n+i>=M)&&(s.push(f+1),s.push(c),s.push(g))}return h}(this.ids,this.coords,t,e,r,this.nodeSize)}}var c=Math.PI/180,p=180/Math.PI;function f(t){var e=m(t[0]+1,t[2]);return[m(t[0],t[2]),M(t[1]+1,t[2]),e,M(t[1],t[2])]}function m(t,e){return t/Math.pow(2,e)*360-180}function M(t,e){var r=Math.PI-2*Math.PI*t/Math.pow(2,e);return p*Math.atan(.5*(Math.exp(r)-Math.exp(-r)))}function g(t,e,r){var n=k(t,e,r);return n[0]=Math.floor(n[0]),n[1]=Math.floor(n[1]),n}function v(t){return[[2*t[0],2*t[1],t[2]+1],[2*t[0]+1,2*t[1],t[2]+1],[2*t[0]+1,2*t[1]+1,t[2]+1],[2*t[0],2*t[1]+1,t[2]+1]]}function y(t){return[t[0]>>1,t[1]>>1,t[2]-1]}function x(t){return v(y(t))}function d(t,e){for(var r=0;r<t.length;r++)if(b(t[r],e))return!0;return!1}function b(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]}function k(t,e,r){var n=Math.sin(e*c),i=Math.pow(2,r),o=i*(t/360+.5);return(o%=i)<0&&(o+=i),[o,i*(.5-.25*Math.log((1+n)/(1-n))/Math.PI),r]}var z={tileToGeoJSON:function(t){var e=f(t);return{type:"Polygon",coordinates:[[[e[0],e[3]],[e[0],e[1]],[e[2],e[1]],[e[2],e[3]],[e[0],e[3]]]]}},tileToBBOX:f,getChildren:v,getParent:y,getSiblings:x,hasTile:d,hasSiblings:function(t,e){for(var r=x(t),n=0;n<r.length;n++)if(!d(e,r[n]))return!1;return!0},tilesEqual:b,tileToQuadkey:function(t){for(var e="",r=t[2];r>0;r--){var n=0,i=1<<r-1;0!=(t[0]&i)&&n++,0!=(t[1]&i)&&(n+=2),e+=n.toString()}return e},quadkeyToTile:function(t){for(var e=0,r=0,n=t.length,i=n;i>0;i--){var o=1<<i-1,s=+t[n-i];1===s&&(e|=o),2===s&&(r|=o),3===s&&(e|=o,r|=o)}return[e,r,n]},pointToTile:g,bboxToTile:function(t){var e=g(t[0],t[1],32),r=g(t[2],t[3],32),n=[e[0],e[1],r[0],r[1]],i=function(t){for(var e=28,r=0;r<e;r++){var n=1<<32-(r+1);if((t[0]&n)!=(t[2]&n)||(t[1]&n)!=(t[3]&n))return r}return e}(n);return 0===i?[0,0,0]:[n[0]>>>32-i,n[1]>>>32-i,i]},pointToTileFraction:k};function _(t){return{type:"Feature",geometry:z.tileToGeoJSON(t),properties:{}}}function C(t,e){var r,n,i=t.coordinates,o=e.max_zoom,s={},a=[];if("Point"===t.type)return[z.pointToTile(i[0],i[1],o)];if("MultiPoint"===t.type)for(r=0;r<i.length;r++)s[A((n=z.pointToTile(i[r][0],i[r][1],o))[0],n[1],n[2])]=!0;else if("LineString"===t.type)T(s,i,o);else if("MultiLineString"===t.type)for(r=0;r<i.length;r++)T(s,i[r],o);else if("Polygon"===t.type)w(s,a,i,o);else{if("MultiPolygon"!==t.type)throw new Error("Geometry type not implemented");for(r=0;r<i.length;r++)w(s,a,i[r],o)}if(e.min_zoom!==o){var h=a.length;for(S(s,a),r=0;r<h;r++){var u=a[r];s[A(u[0],u[1],u[2])]=!0}return function(t,e,r){for(var n=[],i=r.max_zoom;i>r.min_zoom;i--){for(var o={},s=[],a=0;a<e.length;a++){var h=e[a];if(h[0]%2==0&&h[1]%2==0){var u=A(h[0]+1,h[1],i),l=A(h[0],h[1]+1,i),c=A(h[0]+1,h[1]+1,i);if(t[u]&&t[l]&&t[c]){t[A(h[0],h[1],h[2])]=!1,t[u]=!1,t[l]=!1,t[c]=!1;var p=[h[0]/2,h[1]/2,i-1];i-1===r.min_zoom?n.push(p):(o[A(h[0]/2,h[1]/2,i-1)]=!0,s.push(p))}}}for(a=0;a<e.length;a++)t[A((h=e[a])[0],h[1],h[2])]&&n.push(h);t=o,e=s}return n}(s,a,e)}return S(s,a),a}function w(t,e,r,n){for(var i=[],o=0;o<r.length;o++){var s=[];T(t,r[o],n,s);for(var a=0,h=s.length,u=h-1;a<h;u=a++){var l=(a+1)%h,c=s[a][1];(c>s[u][1]||c>s[l][1])&&(c<s[u][1]||c<s[l][1])&&c!==s[l][1]&&i.push(s[a])}}for(i.sort(P),o=0;o<i.length;o+=2){c=i[o][1];for(var p=i[o][0]+1;p<i[o+1][0];p++){t[A(p,c,n)]||e.push([p,c,n])}}}function P(t,e){return t[1]-e[1]||t[0]-e[0]}function T(t,e,r,n){for(var i,o,s=0;s<e.length-1;s++){var a=z.pointToTileFraction(e[s][0],e[s][1],r),h=z.pointToTileFraction(e[s+1][0],e[s+1][1],r),u=a[0],l=a[1],c=h[0]-u,p=h[1]-l;if(0!==p||0!==c){var f=c>0?1:-1,m=p>0?1:-1,M=Math.floor(u),g=Math.floor(l),v=0===c?1/0:Math.abs(((c>0?1:0)+M-u)/c),y=0===p?1/0:Math.abs(((p>0?1:0)+g-l)/p),x=Math.abs(f/c),d=Math.abs(m/p);for(M===i&&g===o||(t[A(M,g,r)]=!0,n&&g!==o&&n.push([M,g]),i=M,o=g);v<1||y<1;)v<y?(v+=x,M+=f):(y+=d,g+=m),t[A(M,g,r)]=!0,n&&g!==o&&n.push([M,g]),i=M,o=g}}n&&g===n[0][1]&&n.pop()}function S(t,e){for(var r,n,i,o,s,a=Object.keys(t),h=0;h<a.length;h++)e.push((r=+a[h],n=void 0,i=void 0,o=void 0,s=void 0,void 0,[s=(o=(r-(n=r%32))/32)%(i=2*(1<<n)),(o-s)/i%i,n]))}function A(t,e,r){return 32*(2*(1<<r)*e+t)+r}var F={geojson:function(t,e){return{type:"FeatureCollection",features:C(t,e).map(_)}},tiles:C,indexes:function(t,e){return C(t,e).map(z.tileToQuadkey)}};class I extends e.VectorLayer{constructor(t,e){super(t,e),this._tileCache={},this._currentTileCache={},this.merc=new r({size:256}),this.globalPoints=[],this.globalFeatures=[],this.kdbush=null}_isGeoJSON(t){return t&&t.features&&Array.isArray(t.features)}_isEmpty(){return 0===this.globalPoints.length}setData(t){if(!this._isGeoJSON(t))return console.error("data is not geojson"),this;const{features:e,points:r}=this._filterGeoJSON(t);return this.globalFeatures=e,this.globalPoints=r,this.kdbush=new l(r),this.clear(),this._tileCache={},this._currentTileCache={},this._viewChange(),this}onAdd(){super.onAdd();const t=this.map||this.getMap();return t?(t.on("viewchange",this._viewChange,this),this._viewChange(),this):this}onRemove(){super.onRemove();const t=this.map||this.getMap();return t?(t.off("viewchange",this._viewChange,this),this):this}_viewChange(){if(this._isEmpty())return this;const t=this.getMap();if(!t)return this;const e=t.getExtent();e.xmin>e.xmax&&(e.xmax=178),e.ymin>e.ymax&&(e.ymax=85);const r=function(t){const{xmin:e,ymin:r,xmax:n,ymax:i}=t;return{type:"Polygon",coordinates:[[[e,r],[e,i],[n,i],[n,r],[e,r]]]}}(e),n=Math.round(t.getZoom()),i=F.tiles(r,{min_zoom:n,max_zoom:n});this._cluster(i)}_cluster(t){if(this._isEmpty())return this;const e=this._currentTileCache,r=this._tileCache,n=this.merc,i=this.kdbush,o={};t.forEach((t=>{const[s,a,h]=t,u=[s,a,h].join("_").toString();if(o[u]=1,e[u])return;let l;if(r[u])l=r[u];else{const t=n.bbox(s,a,h),e=i.range(t[0],t[1],t[2],t[3]);l=this._tileCluster(u,e,h)}!e[u]&&l.markers.length&&this.addGeometry(l.markers),e[u]=l}));for(const t in e)o[t]||(e[t].markers.length&&this.removeGeometry(e[t].markers),delete e[t])}_tileCluster(t,r,n){const i=this._tileCache,o=this.globalPoints,s=this.globalFeatures,a=this.options.maxClusterZoom;if(!i[t]&&(i[t]={points:[],features:[],coordinate:null,markers:[]},r.length)){const{x:h,y:u,points:l,features:c}=this._getClusterResult(o,r);if(i[t].coordinates=[h,u],1===r.length){const n=s[r[0]];i[t].markers=[new e.Marker(i[t].coordinates,{symbol:n.symbol,properties:n.properties||{}})]}else i[t].markers=n>a?r.map((t=>{const r=s[t];return new e.Marker(o[t],{symbol:r.symbol,properties:r.properties||{}})})):[this._getClusterMarker(i[t].coordinates,r.length,c)];this._bindMarkersEvents(i[t].markers),i[t].points=l,i[t].features=c}return i[t]}_bindMarkersEvents(t=[]){return t.forEach((t=>{for(const e in this.options.markerEvents)t.on(e,this.options.markerEvents[e])})),this}_getClusterMarker(t,r,n){const i=this.options.clusterMarkerSymbol;let o;return i&&e.Util.isFunction(i)&&(o=i(r)),o||(o=function(t){const e=function(t){let e="rgb(135, 196, 240)";return t?(t>1e3&&(e="#1bbc9b"),t>5e3&&(e="rgb(216, 115, 149)"),e):e}(t);return{markerType:"ellipse",markerWidth:65,markerHeight:65,markerFill:e,markerLineWidth:0,markerFillOpacity:1,markerOpacity:1,textSize:15,textName:t,textHaloFill:"#000",textHaloRadius:1.2,textFill:"#fff"}}(r)),new e.Marker(t,{symbol:o,properties:{isCluster:!0,features:n}})}_filterGeoJSON(t){const e=[],r=[];for(let n=0,i=t.features.length;n<i;n++)"Point"===t.features[n].geometry.type&&(e.push(t.features[n].geometry.coordinates),r.push(t.features[n]));return{points:e,features:r}}_getClusterResult(t,e){const{globalFeatures:r}=this,n=[],i=[];let o=0,s=0;const a=e.length;for(let h=0;h<a;h++){const a=e[h],[u,l]=t[a];o+=u,s+=l,n.push(t[a]),i.push(r[a])}return{x:o/a,y:s/a,points:n,features:i}}}I.mergeOptions({maxClusterZoom:18,clusterMarkerSymbol:null,markerEvents:{}}),t.TileClusterLayer=I,Object.defineProperty(t,"__esModule",{value:!0})}));
